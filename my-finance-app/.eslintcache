[{"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\index.js":"1","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\App.js":"2","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\reportWebVitals.js":"3","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\Components\\Start\\Start.jsx":"4","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\Components\\Login\\Login.jsx":"5","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\Components\\CreateAccount\\CreateAccount.jsx":"6","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\Components\\MainPage\\Main.jsx":"7","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\Components\\MainPage\\Daily\\Daily.jsx":"8","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\Components\\MainPage\\Monthly\\Monthly.jsx":"9","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\Components\\MainPage\\Weekly\\Weekly.jsx":"10"},{"size":549,"mtime":1610291317590,"results":"11","hashOfConfig":"12"},{"size":1807,"mtime":1610311945497,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":822,"mtime":1609942170929,"results":"15","hashOfConfig":"12"},{"size":2065,"mtime":1610058980812,"results":"16","hashOfConfig":"12"},{"size":3535,"mtime":1610187682248,"results":"17","hashOfConfig":"12"},{"size":11895,"mtime":1610314779141,"results":"18","hashOfConfig":"12"},{"size":4590,"mtime":1610288175987,"results":"19","hashOfConfig":"12"},{"size":4670,"mtime":1610288191083,"results":"20","hashOfConfig":"12"},{"size":4656,"mtime":1610288202994,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"cv3rzl",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\index.js",[],["48","49"],"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\App.js",["50"],"import React, {useState,useEffect} from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Start from \"./Components/Start/Start\";\nimport Login from \"./Components/Login/Login\";\nimport Form from \"./Components/CreateAccount/CreateAccount\";\nimport Main from \"./Components/MainPage/Main\";\nimport Daily from \"./Components/MainPage/Daily/Daily\";\nimport Weekly from \"./Components/MainPage/Weekly/Weekly\";\nimport Monthly from \"./Components/MainPage/Monthly/Monthly\";\nimport \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [isLoading, setLoading] = useState(true);\n\n  function fakeRequest() {\n    return new Promise((resolve) => setTimeout(() => resolve(), 3000));\n  }\n\n  useEffect(() => {\n    fakeRequest().then(() => {\n      const el = document.querySelector(\".loader-container\");\n      if (el) {\n        el.remove();\n        setLoading(!isLoading);\n      }\n    });\n  }, []);\n\n  if (isLoading) {\n    return null;\n  }\n  return (\n    <BrowserRouter>\n      <Route path=\"/start\">\n        <div className=\"App\">\n          <Start />\n        </div>\n      </Route>\n      <Route path=\"/login\">\n        <div className=\"App\">\n          <Login />\n        </div>\n      </Route>\n      <Route path=\"/form\">\n        <div className=\"App\">\n          <Form />\n        </div>\n      </Route>\n      <Route path=\"/main\">\n        <div className=\"App\">\n          <Main />\n        </div>\n      </Route>\n      <Route path=\"/daily\">\n        <div className=\"App\">\n          <Daily />\n        </div>\n      </Route>\n      <Route path=\"/weekly\">\n        <div className=\"App\">\n          <Weekly />\n        </div>\n      </Route>\n      <Route path=\"/monthly\">\n        <div className=\"App\">\n          <Monthly />\n        </div>\n      </Route>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\reportWebVitals.js",[],"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\Components\\Start\\Start.jsx",[],"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\Components\\Login\\Login.jsx",[],"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\Components\\CreateAccount\\CreateAccount.jsx",[],"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\Components\\MainPage\\Main.jsx",["51","52"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Axios from \"axios\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport \"./Main.css\";\r\n\r\nfunction Main() {\r\n  const [fromName, setFromName] = useState(\"\");\r\n  const [toName, setToName] = useState(\"\");\r\n  const [trsInc, setTrsInc] = useState(\"\");\r\n  const [trsOut, setTrsOut] = useState(\"\");\r\n  const [createList, getList] = useState([]);\r\n  const [showBalance, getBalance] = useState(\"\");\r\n  const [showSumIncome, setShowSumIncome] = useState(\"\");\r\n  const [showSumOut, setShowSumOut] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/transactions\").then((response) => {\r\n      getList(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/balance\").then((response) => {\r\n      //   getBalance(response.data.reduce((a, b) => a+b));\r\n      let res;\r\n      let dataFrom = response.data;\r\n      let idx = dataFrom.length - 1;\r\n      if (idx === -1) {\r\n        res = 0;\r\n      } else {\r\n        res = dataFrom[idx].balance;\r\n      }\r\n      getBalance(res);\r\n    });\r\n  }, []);\r\n  //   console.log(showBalance);\r\n\r\n  //   function getBalanceSum(){\r\n  //       let idx = showBalance.length - 1;\r\n  //       console.log(showBalance[idx].balance);\r\n  //     //   setShowSum(res)\r\n  //     //   return res\r\n  //   }\r\n  //   getBalanceSum();\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/incomeSum\").then((response) => {\r\n      let income = response.data;\r\n      income.map((val) => {\r\n        let incomeSumVal = val.trs_inc;\r\n        setShowSumIncome(incomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/outcomeSum\").then((response) => {\r\n      let outcome = response.data;\r\n      outcome.map((val) => {\r\n        let outcomeSumVal = val.trs_out;\r\n        setShowSumOut(outcomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n  //   console.log(showSumOut)\r\n\r\n  const submitOperationInc = () => {\r\n    Axios.post(\"http://localhost:5000/transactions\", {\r\n      fromName: fromName,\r\n      toName: toName,\r\n      trsInc: trsInc,\r\n      trsOut: 0,\r\n    }).then(() => {\r\n      alert(\"successful insert transaction\");\r\n    });\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const submitOperationOut = () => {\r\n    Axios.post(\"http://localhost:5000/transactions\", {\r\n      fromName: fromName,\r\n      toName: toName,\r\n      trsInc: 0,\r\n      trsOut: trsOut,\r\n    }).then(() => {\r\n      alert(\"successful insert transaction\");\r\n    });\r\n    window.location.reload(false);\r\n  };\r\n  const data = {\r\n    labels: [\"Income\", \"Outcome\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [showSumIncome, showSumOut],\r\n        backgroundColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    // <BrowserRouter>\r\n    <div className=\"Main\">\r\n      <h1>Main</h1>\r\n      <div className=\"Main__header\">\r\n        <Link\r\n          to=\"/monthly\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Login__button\"\r\n        >\r\n          <button className=\"buttons\">Monthly</button>\r\n        </Link>\r\n        <Link\r\n          to=\"/weekly\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Login__button\"\r\n        >\r\n          <button className=\"buttons\">Weekly</button>\r\n        </Link>\r\n        <Link\r\n          to=\"/daily\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Login__button\"\r\n        >\r\n          <button className=\"buttons\">Daily</button>\r\n        </Link>\r\n      </div>\r\n      <Doughnut data={data} />\r\n      <div className=\"Main__balance\">\r\n        <h6>balance: </h6>\r\n        <h4> {showBalance} azn</h4>\r\n      </div>\r\n      <div className=\"main__table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Income</th>\r\n              <th>Outcome</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {createList.map((val) => {\r\n              return (\r\n                <tr key={val.trs_id}>\r\n                  <td>{val.name_from}</td>\r\n                  <td>{val.name_to}</td>\r\n                  <td>{val.trs_inc}</td>\r\n                  <td>{val.trs_out}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"select_buttons\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-light add\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#exampleModalCenter\"\r\n          >\r\n            <FontAwesomeIcon icon={faPlus} size=\"3x\" color=\"#60C6D8\" />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-light add\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#exampleModalCenter2\"\r\n          >\r\n            <FontAwesomeIcon icon={faMinus} size=\"3x\" color=\"#60C6D8\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* ---------- MODAL ---------------- */}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModalCenter\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"exampleModalCenterTitle\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h6 className=\"modal-title\" id=\"exampleModalCenterTitle\">\r\n                Your new event...\r\n              </h6>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <h2>Income</h2>\r\n              <form>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"from\" className=\"form-label\"></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"from\"\r\n                    name=\"fromName\"\r\n                    aria-describedby=\"fromHelp\"\r\n                    placeholder=\"From\"\r\n                    onChange={(e) => {\r\n                      setFromName(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"to\" className=\"form-label\"></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"to\"\r\n                    name=\"toName\"\r\n                    aria-describedby=\"toHelp\"\r\n                    placeholder=\"To\"\r\n                    onChange={(e) => {\r\n                      setToName(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"trsInc\" className=\"form-label\"></label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"trsInc\"\r\n                    name=\"trsInc\"\r\n                    aria-describedby=\"toHelp\"\r\n                    placeholder=\"Ammount\"\r\n                    onChange={(e) => {\r\n                      setTrsInc(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                data-dismiss=\"modal\"\r\n                onClick={submitOperationInc}\r\n              >\r\n                Save changes\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModalCenter2\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"exampleModalCenterTitle\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h6 className=\"modal-title\" id=\"exampleModalCenterTitle\">\r\n                Your new event...\r\n              </h6>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <h2>Outcome</h2>\r\n              <form>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"from\" className=\"form-label\"></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"from\"\r\n                    name=\"fromName\"\r\n                    aria-describedby=\"fromHelp\"\r\n                    placeholder=\"From\"\r\n                    onChange={(e) => {\r\n                      setFromName(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"to\" className=\"form-label\"></label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"to\"\r\n                    name=\"toName\"\r\n                    aria-describedby=\"toHelp\"\r\n                    placeholder=\"To\"\r\n                    onChange={(e) => {\r\n                      setToName(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"trsOut\" className=\"form-label\"></label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"trsOut\"\r\n                    name=\"trsOut\"\r\n                    aria-describedby=\"toHelp\"\r\n                    placeholder=\"Ammount\"\r\n                    onChange={(e) => {\r\n                      setTrsOut(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                data-dismiss=\"modal\"\r\n                onClick={submitOperationOut}\r\n              >\r\n                Save changes\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {<ReactBootStrap.Spinner animation=\"grow\" variant=\"secondary\" />} */}\r\n      {/* <Loader\r\n         type=\"Puff\"\r\n         color=\"#00BFFF\"\r\n         height={100}\r\n         width={100}\r\n         timeout={3000} //3 secs\r\n \r\n      /> */}\r\n    </div>\r\n    // </BrowserRouter>\r\n  );\r\n  //   }\r\n}\r\n\r\n// export default Main;\r\nexport default Main;\r\n","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\Components\\MainPage\\Daily\\Daily.jsx",["53","54"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Daily.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nfunction Daily() {\r\n\r\n  const [showDaily, getDaily] = useState([]);\r\n//   const [showWeekBalance, getShowDailyBalance] = useState(\"\");\r\n  const [showSumIncome, setShowSumIncome] = useState(\"\");\r\n  const [showSumOut, setShowSumOut] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/daily\").then((response) => {\r\n      getDaily(response.data);\r\n    });\r\n  }, []);\r\n//   useEffect(() => {\r\n//     Axios.get(\"http://localhost:5000/balance/daily\").then((response) => {\r\n//       //   getBalance(response.data.reduce((a, b) => a+b));\r\n//       let res;\r\n//       let dataFrom = response.data;\r\n//       let idx = dataFrom.length - 1;\r\n//       if (idx === -1) {\r\n//         res = 0;\r\n//       } else {\r\n//         res = dataFrom[idx].balance;\r\n//       }\r\n//       getShowDailyBalance(res);\r\n//     });\r\n//   }, []);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/incomeSum/daily\").then((response) => {\r\n      let income = response.data;\r\n      income.map((val) => {\r\n        let incomeSumVal = val.trs_inc;\r\n        setShowSumIncome(incomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/outcomeSum/daily\").then((response) => {\r\n      let outcome = response.data;\r\n      outcome.map((val) => {\r\n        let outcomeSumVal = val.trs_out;\r\n        setShowSumOut(outcomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const deleteTrns = (id_trs) => {\r\n    Axios.delete(`http://localhost:5000/monthly/${id_trs}`);\r\n    console.log(id_trs);\r\n    window.location.reload(false);\r\n  };\r\n\r\n\r\n  const data = {\r\n    labels: [\"Income\", \"Outcome\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [showSumIncome, showSumOut],\r\n        backgroundColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"Daily\">\r\n      <div className=\"Daily__header\">\r\n        <Link\r\n          to=\"/weekly\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Daily__button\"\r\n        >\r\n          <FontAwesomeIcon icon={faChevronCircleLeft} size=\"2x\" color=\"#60C6D8\" />\r\n        </Link>\r\n        <h1>Daily</h1>\r\n        <Link\r\n          to=\"/monthly\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Daily__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n          icon={faChevronCircleRight}\r\n          size=\"2x\"\r\n          color=\"#60C6D8\"\r\n        />\r\n        </Link>\r\n      </div>\r\n      <Doughnut data={data} />\r\n      <div className=\"Daily__table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Income</th>\r\n              <th>Outcome</th>\r\n              <th>Date</th>\r\n              <th>D</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {showDaily.map((val) => {\r\n              return (\r\n                <tr key={val.trs_id}>\r\n                  <td>{val.name_from}</td>\r\n                  <td>{val.name_to}</td>\r\n                  <td>{val.trs_inc}</td>\r\n                  <td>{val.trs_out}</td>\r\n                  <td className=\"Monthly__table-date\">{val.trs_date}</td>\r\n                  <td\r\n                    className=\"no__border\"\r\n                    onClick={() => {\r\n                      deleteTrns(val.trs_id);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={faTimesCircle}\r\n                      size=\"1x\"\r\n                      color=\"#c750a3\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"Daily__butt\">\r\n        <Link\r\n          to=\"/main\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Daily__button\"\r\n        >\r\n          {/* <button>Let's start</button> */}\r\n          <button type=\"button\" className=\"btn btn-primary\">\r\n            Back to Main\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Daily;\r\n","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\Components\\MainPage\\Monthly\\Monthly.jsx",["55","56"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Monthly.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Monthly() {\r\n\r\n  const [showMonthly, getMonthly] = useState([]);\r\n//   const [showMontBalance, getShowMontBalance] = useState(\"\");\r\n  const [showSumIncome, setShowSumIncome] = useState(\"\");\r\n  const [showSumOut, setShowSumOut] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/monthly\").then((response) => {\r\n      getMonthly(response.data);\r\n    });\r\n  }, []);\r\n\r\n//   useEffect(() => {\r\n//     Axios.get(\"http://localhost:5000/balance/month\").then((response) => {\r\n//       //   getBalance(response.data.reduce((a, b) => a+b));\r\n//       let res;\r\n//       let dataFrom = response.data;\r\n//       let idx = dataFrom.length - 1;\r\n//       if (idx === -1) {\r\n//         res = 0;\r\n//       } else {\r\n//         res = dataFrom[idx].balance;\r\n//       }\r\n//       getShowMontBalance(res);\r\n//     });\r\n//   }, []);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/incomeSum/month\").then((response) => {\r\n      let income = response.data;\r\n      income.map((val) => {\r\n        let incomeSumVal = val.trs_inc;\r\n        setShowSumIncome(incomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/outcomeSum/month\").then((response) => {\r\n      let outcome = response.data;\r\n      outcome.map((val) => {\r\n        let outcomeSumVal = val.trs_out;\r\n        setShowSumOut(outcomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const deleteTrns = (id_trs) => {\r\n    Axios.delete(`http://localhost:5000/monthly/${id_trs}`);\r\n    console.log(id_trs);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const data = {\r\n    labels: [\"Income\", \"Outcome\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [showSumIncome, showSumOut],\r\n        backgroundColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"Monthly\">\r\n      <div className=\"Monthly__header\">\r\n        <Link\r\n          to=\"/daily\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Monthly__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleLeft}\r\n            size=\"2x\"\r\n            color=\"#60C6D8\"\r\n          />\r\n        </Link>\r\n        <h1>Monthly</h1>\r\n        <Link\r\n          to=\"/weekly\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Monthly__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleRight}\r\n            size=\"2x\"\r\n            color=\"#60C6D8\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <Doughnut data={data} />\r\n      <div className=\"Monthly__table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Income</th>\r\n              <th>Out</th>\r\n              <th>Date</th>\r\n              <th>D</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {showMonthly.map((val) => {\r\n              return (\r\n                <tr key={val.trs_id}>\r\n                  <td>{val.name_from}</td>\r\n                  <td>{val.name_to}</td>\r\n                  <td>{val.trs_inc}</td>\r\n                  <td>{val.trs_out}</td>\r\n                  <td className=\"Monthly__table-date\">{val.trs_date}</td>\r\n                  <td\r\n                    className=\"no__border\"\r\n                    onClick={() => {\r\n                      deleteTrns(val.trs_id);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={faTimesCircle}\r\n                      size=\"1x\"\r\n                      color=\"#c750a3\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"Monthly__butt\">\r\n        <Link\r\n          to=\"/main\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Monthly__button\"\r\n        >\r\n          {/* <button>Let's start</button> */}\r\n          <button type=\"button\" className=\"btn btn-primary\">\r\n            Back to Main\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Monthly;\r\n","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\my-finance-app\\src\\Components\\MainPage\\Weekly\\Weekly.jsx",["57","58"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Weekly.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Weekly() {\r\n  const [showWeekly, getWeekly] = useState([]);\r\n//   const [showWeekBalance, getShowWeekBalance] = useState(\"\");\r\n  const [showSumIncome, setShowSumIncome] = useState(\"\");\r\n  const [showSumOut, setShowSumOut] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/weekly\").then((response) => {\r\n      getWeekly(response.data);\r\n    });\r\n  }, []);\r\n\r\n//   useEffect(() => {\r\n//     Axios.get(\"http://localhost:5000/balance/weekly\").then((response) => {\r\n//       //   getBalance(response.data.reduce((a, b) => a+b));\r\n//       let res;\r\n//       let dataFrom = response.data;\r\n//       let idx = dataFrom.length - 1;\r\n//       if (idx === -1) {\r\n//         res = 0;\r\n//       } else {\r\n//         res = dataFrom[idx].balance;\r\n//       }\r\n//       getShowWeekBalance(res);\r\n//     });\r\n//   }, []);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/incomeSum/weekly\").then((response) => {\r\n      let income = response.data;\r\n      income.map((val) => {\r\n        let incomeSumVal = val.trs_inc;\r\n        setShowSumIncome(incomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/outcomeSum/weekly\").then((response) => {\r\n      let outcome = response.data;\r\n      outcome.map((val) => {\r\n        let outcomeSumVal = val.trs_out;\r\n        setShowSumOut(outcomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const deleteTrns = (id_trs) => {\r\n    Axios.delete(`http://localhost:5000/monthly/${id_trs}`);\r\n    console.log(id_trs);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const data = {\r\n    labels: [\"Income\", \"Outcome\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [showSumIncome, showSumOut],\r\n        backgroundColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"Weekly\">\r\n      <div className=\"Weekly__header\">\r\n        <Link\r\n          to=\"/monthly\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Weekly__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleLeft}\r\n            size=\"2x\"\r\n            color=\"#60C6D8\"\r\n          />\r\n        </Link>\r\n        <h1>Weekly</h1>\r\n        <Link\r\n          to=\"/daily\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Weekly__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleRight}\r\n            size=\"2x\"\r\n            color=\"#60C6D8\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <Doughnut data={data} />\r\n      <div className=\"Weekly__table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Income</th>\r\n              <th>Out</th>\r\n              <th>Date</th>\r\n              <th>D</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {showWeekly.map((val) => {\r\n              return (\r\n                <tr key={val.trs_id}>\r\n                  <td>{val.name_from}</td>\r\n                  <td>{val.name_to}</td>\r\n                  <td>{val.trs_inc}</td>\r\n                  <td>{val.trs_out}</td>\r\n                  <td className=\"Monthly__table-date\">{val.trs_date}</td>\r\n                  <td\r\n                    className=\"no__border\"\r\n                    onClick={() => {\r\n                      deleteTrns(val.trs_id);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={faTimesCircle}\r\n                      size=\"1x\"\r\n                      color=\"#c750a3\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"Weekly__butt\">\r\n        <Link\r\n          to=\"/main\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Weekly__button\"\r\n        >\r\n          {/* <button>Let's start</button> */}\r\n          <button type=\"button\" className=\"btn btn-primary\">\r\n            Back to Main\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weekly;\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":28,"column":6,"nodeType":"65","endLine":28,"endColumn":8,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":54,"column":24,"nodeType":"69","messageId":"70","endLine":54,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":63,"column":25,"nodeType":"69","messageId":"70","endLine":63,"endColumn":27},{"ruleId":"67","severity":1,"message":"68","line":42,"column":24,"nodeType":"69","messageId":"70","endLine":42,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":51,"column":25,"nodeType":"69","messageId":"70","endLine":51,"endColumn":27},{"ruleId":"67","severity":1,"message":"68","line":42,"column":24,"nodeType":"69","messageId":"70","endLine":42,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":51,"column":25,"nodeType":"69","messageId":"70","endLine":51,"endColumn":27},{"ruleId":"67","severity":1,"message":"68","line":41,"column":24,"nodeType":"69","messageId":"70","endLine":41,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":50,"column":25,"nodeType":"69","messageId":"70","endLine":50,"endColumn":27},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoading'. Either include it or remove the dependency array. You can also do a functional update 'setLoading(i => ...)' if you only need 'isLoading' in the 'setLoading' call.","ArrayExpression",["73"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [isLoading]",{"range":"76","text":"77"},[923,925],"[isLoading]"]