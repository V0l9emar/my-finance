[{"C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\index.js":"1","C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\App.js":"2","C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\reportWebVitals.js":"3","C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\Components\\MainPage\\Main.jsx":"4","C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\Components\\Login\\Login.jsx":"5","C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\Components\\CreateAccount\\CreateAccount.jsx":"6","C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\Components\\Start\\Start.jsx":"7","C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\Components\\MainPage\\Weekly\\Weekly.jsx":"8","C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\Components\\MainPage\\Daily\\Daily.jsx":"9","C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\Components\\MainPage\\Monthly\\Monthly.jsx":"10"},{"size":549,"mtime":1610291317590,"results":"11","hashOfConfig":"12"},{"size":2044,"mtime":1610283878345,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":12039,"mtime":1610291174898,"results":"15","hashOfConfig":"12"},{"size":2065,"mtime":1610058980812,"results":"16","hashOfConfig":"12"},{"size":3535,"mtime":1610187682248,"results":"17","hashOfConfig":"12"},{"size":822,"mtime":1609942170929,"results":"18","hashOfConfig":"12"},{"size":4656,"mtime":1610288202994,"results":"19","hashOfConfig":"12"},{"size":4590,"mtime":1610288175987,"results":"20","hashOfConfig":"12"},{"size":4670,"mtime":1610288191083,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uq3p7r",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},"C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\index.js",[],"C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\App.js",["47","48"],"// import React, { Component } from \"react\";\nimport React, {useState,useEffect} from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Start from \"./Components/Start/Start\";\nimport Login from \"./Components/Login/Login\";\nimport Form from \"./Components/CreateAccount/CreateAccount\";\nimport Main from \"./Components/MainPage/Main\";\nimport Daily from \"./Components/MainPage/Daily/Daily\";\nimport Weekly from \"./Components/MainPage/Weekly/Weekly\";\nimport Monthly from \"./Components/MainPage/Monthly/Monthly\";\nimport \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport * as ReactBootStrap from \"react-bootstrap\";\n// import Weekly from './Components/MainPage/Weekly/Weekly';\n\nfunction App() {\n  const [isLoading, setLoading] = useState(true);\n\n  function fakeRequest() {\n    return new Promise((resolve) => setTimeout(() => resolve(), 3000));\n  }\n\n  useEffect(() => {\n    fakeRequest().then(() => {\n      const el = document.querySelector(\".loader-container\");\n      if (el) {\n        el.remove();\n        setLoading(!isLoading);\n      }\n    });\n  }, []);\n\n  if (isLoading) {\n    return null;\n  }\n  return (\n    <BrowserRouter>\n      <Route path=\"/start\">\n        <div className=\"App\">\n          <Start />\n        </div>\n      </Route>\n      <Route path=\"/login\">\n        <div className=\"App\">\n          <Login />\n        </div>\n      </Route>\n      <Route path=\"/form\">\n        <div className=\"App\">\n          <Form />\n        </div>\n      </Route>\n      <Route path=\"/main\">\n        <div className=\"App\">\n          <Main />\n        </div>\n      </Route>\n      <Route path=\"/daily\">\n        <div className=\"App\">\n          <Daily />\n        </div>\n      </Route>\n      <Route path=\"/weekly\">\n        <div className=\"App\">\n          <Weekly />\n        </div>\n      </Route>\n      <Route path=\"/monthly\">\n        <div className=\"App\">\n          <Monthly />\n        </div>\n      </Route>\n      {/* {<ReactBootStrap.Spinner animation=\"grow\" variant=\"secondary\" />} */}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n",["49","50"],"C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\reportWebVitals.js",[],"C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\Components\\MainPage\\Main.jsx",["51","52","53"],"C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\Components\\Login\\Login.jsx",[],"C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\Components\\CreateAccount\\CreateAccount.jsx",[],"C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\Components\\Start\\Start.jsx",[],"C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\Components\\MainPage\\Weekly\\Weekly.jsx",["54","55"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Weekly.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Weekly() {\r\n  const [showWeekly, getWeekly] = useState([]);\r\n//   const [showWeekBalance, getShowWeekBalance] = useState(\"\");\r\n  const [showSumIncome, setShowSumIncome] = useState(\"\");\r\n  const [showSumOut, setShowSumOut] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/weekly\").then((response) => {\r\n      getWeekly(response.data);\r\n    });\r\n  }, []);\r\n\r\n//   useEffect(() => {\r\n//     Axios.get(\"http://localhost:5000/balance/weekly\").then((response) => {\r\n//       //   getBalance(response.data.reduce((a, b) => a+b));\r\n//       let res;\r\n//       let dataFrom = response.data;\r\n//       let idx = dataFrom.length - 1;\r\n//       if (idx === -1) {\r\n//         res = 0;\r\n//       } else {\r\n//         res = dataFrom[idx].balance;\r\n//       }\r\n//       getShowWeekBalance(res);\r\n//     });\r\n//   }, []);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/incomeSum/weekly\").then((response) => {\r\n      let income = response.data;\r\n      income.map((val) => {\r\n        let incomeSumVal = val.trs_inc;\r\n        setShowSumIncome(incomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/outcomeSum/weekly\").then((response) => {\r\n      let outcome = response.data;\r\n      outcome.map((val) => {\r\n        let outcomeSumVal = val.trs_out;\r\n        setShowSumOut(outcomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const deleteTrns = (id_trs) => {\r\n    Axios.delete(`http://localhost:5000/monthly/${id_trs}`);\r\n    console.log(id_trs);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const data = {\r\n    labels: [\"Income\", \"Outcome\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [showSumIncome, showSumOut],\r\n        backgroundColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"Weekly\">\r\n      <div className=\"Weekly__header\">\r\n        <Link\r\n          to=\"/monthly\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Weekly__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleLeft}\r\n            size=\"2x\"\r\n            color=\"#60C6D8\"\r\n          />\r\n        </Link>\r\n        <h1>Weekly</h1>\r\n        <Link\r\n          to=\"/daily\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Weekly__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleRight}\r\n            size=\"2x\"\r\n            color=\"#60C6D8\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <Doughnut data={data} />\r\n      <div className=\"Weekly__table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Income</th>\r\n              <th>Out</th>\r\n              <th>Date</th>\r\n              <th>D</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {showWeekly.map((val) => {\r\n              return (\r\n                <tr key={val.trs_id}>\r\n                  <td>{val.name_from}</td>\r\n                  <td>{val.name_to}</td>\r\n                  <td>{val.trs_inc}</td>\r\n                  <td>{val.trs_out}</td>\r\n                  <td className=\"Monthly__table-date\">{val.trs_date}</td>\r\n                  <td\r\n                    className=\"no__border\"\r\n                    onClick={() => {\r\n                      deleteTrns(val.trs_id);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={faTimesCircle}\r\n                      size=\"1x\"\r\n                      color=\"#c750a3\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"Weekly__butt\">\r\n        <Link\r\n          to=\"/main\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Weekly__button\"\r\n        >\r\n          {/* <button>Let's start</button> */}\r\n          <button type=\"button\" className=\"btn btn-primary\">\r\n            Back to Main\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weekly;\r\n","C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\Components\\MainPage\\Daily\\Daily.jsx",["56","57"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Daily.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nfunction Daily() {\r\n\r\n  const [showDaily, getDaily] = useState([]);\r\n//   const [showWeekBalance, getShowDailyBalance] = useState(\"\");\r\n  const [showSumIncome, setShowSumIncome] = useState(\"\");\r\n  const [showSumOut, setShowSumOut] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/daily\").then((response) => {\r\n      getDaily(response.data);\r\n    });\r\n  }, []);\r\n//   useEffect(() => {\r\n//     Axios.get(\"http://localhost:5000/balance/daily\").then((response) => {\r\n//       //   getBalance(response.data.reduce((a, b) => a+b));\r\n//       let res;\r\n//       let dataFrom = response.data;\r\n//       let idx = dataFrom.length - 1;\r\n//       if (idx === -1) {\r\n//         res = 0;\r\n//       } else {\r\n//         res = dataFrom[idx].balance;\r\n//       }\r\n//       getShowDailyBalance(res);\r\n//     });\r\n//   }, []);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/incomeSum/daily\").then((response) => {\r\n      let income = response.data;\r\n      income.map((val) => {\r\n        let incomeSumVal = val.trs_inc;\r\n        setShowSumIncome(incomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/outcomeSum/daily\").then((response) => {\r\n      let outcome = response.data;\r\n      outcome.map((val) => {\r\n        let outcomeSumVal = val.trs_out;\r\n        setShowSumOut(outcomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const deleteTrns = (id_trs) => {\r\n    Axios.delete(`http://localhost:5000/monthly/${id_trs}`);\r\n    console.log(id_trs);\r\n    window.location.reload(false);\r\n  };\r\n\r\n\r\n  const data = {\r\n    labels: [\"Income\", \"Outcome\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [showSumIncome, showSumOut],\r\n        backgroundColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"Daily\">\r\n      <div className=\"Daily__header\">\r\n        <Link\r\n          to=\"/weekly\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Daily__button\"\r\n        >\r\n          <FontAwesomeIcon icon={faChevronCircleLeft} size=\"2x\" color=\"#60C6D8\" />\r\n        </Link>\r\n        <h1>Daily</h1>\r\n        <Link\r\n          to=\"/monthly\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Daily__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n          icon={faChevronCircleRight}\r\n          size=\"2x\"\r\n          color=\"#60C6D8\"\r\n        />\r\n        </Link>\r\n      </div>\r\n      <Doughnut data={data} />\r\n      <div className=\"Daily__table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Income</th>\r\n              <th>Outcome</th>\r\n              <th>Date</th>\r\n              <th>D</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {showDaily.map((val) => {\r\n              return (\r\n                <tr key={val.trs_id}>\r\n                  <td>{val.name_from}</td>\r\n                  <td>{val.name_to}</td>\r\n                  <td>{val.trs_inc}</td>\r\n                  <td>{val.trs_out}</td>\r\n                  <td className=\"Monthly__table-date\">{val.trs_date}</td>\r\n                  <td\r\n                    className=\"no__border\"\r\n                    onClick={() => {\r\n                      deleteTrns(val.trs_id);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={faTimesCircle}\r\n                      size=\"1x\"\r\n                      color=\"#c750a3\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"Daily__butt\">\r\n        <Link\r\n          to=\"/main\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Daily__button\"\r\n        >\r\n          {/* <button>Let's start</button> */}\r\n          <button type=\"button\" className=\"btn btn-primary\">\r\n            Back to Main\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Daily;\r\n","C:\\Users\\Xilas\\Desktop\\bootcamp\\final_project\\my-finance-app\\src\\Components\\MainPage\\Monthly\\Monthly.jsx",["58","59"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Monthly.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Monthly() {\r\n\r\n  const [showMonthly, getMonthly] = useState([]);\r\n//   const [showMontBalance, getShowMontBalance] = useState(\"\");\r\n  const [showSumIncome, setShowSumIncome] = useState(\"\");\r\n  const [showSumOut, setShowSumOut] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/monthly\").then((response) => {\r\n      getMonthly(response.data);\r\n    });\r\n  }, []);\r\n\r\n//   useEffect(() => {\r\n//     Axios.get(\"http://localhost:5000/balance/month\").then((response) => {\r\n//       //   getBalance(response.data.reduce((a, b) => a+b));\r\n//       let res;\r\n//       let dataFrom = response.data;\r\n//       let idx = dataFrom.length - 1;\r\n//       if (idx === -1) {\r\n//         res = 0;\r\n//       } else {\r\n//         res = dataFrom[idx].balance;\r\n//       }\r\n//       getShowMontBalance(res);\r\n//     });\r\n//   }, []);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/incomeSum/month\").then((response) => {\r\n      let income = response.data;\r\n      income.map((val) => {\r\n        let incomeSumVal = val.trs_inc;\r\n        setShowSumIncome(incomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/outcomeSum/month\").then((response) => {\r\n      let outcome = response.data;\r\n      outcome.map((val) => {\r\n        let outcomeSumVal = val.trs_out;\r\n        setShowSumOut(outcomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const deleteTrns = (id_trs) => {\r\n    Axios.delete(`http://localhost:5000/monthly/${id_trs}`);\r\n    console.log(id_trs);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const data = {\r\n    labels: [\"Income\", \"Outcome\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [showSumIncome, showSumOut],\r\n        backgroundColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"Monthly\">\r\n      <div className=\"Monthly__header\">\r\n        <Link\r\n          to=\"/daily\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Monthly__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleLeft}\r\n            size=\"2x\"\r\n            color=\"#60C6D8\"\r\n          />\r\n        </Link>\r\n        <h1>Monthly</h1>\r\n        <Link\r\n          to=\"/weekly\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Monthly__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleRight}\r\n            size=\"2x\"\r\n            color=\"#60C6D8\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <Doughnut data={data} />\r\n      <div className=\"Monthly__table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Income</th>\r\n              <th>Out</th>\r\n              <th>Date</th>\r\n              <th>D</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {showMonthly.map((val) => {\r\n              return (\r\n                <tr key={val.trs_id}>\r\n                  <td>{val.name_from}</td>\r\n                  <td>{val.name_to}</td>\r\n                  <td>{val.trs_inc}</td>\r\n                  <td>{val.trs_out}</td>\r\n                  <td className=\"Monthly__table-date\">{val.trs_date}</td>\r\n                  <td\r\n                    className=\"no__border\"\r\n                    onClick={() => {\r\n                      deleteTrns(val.trs_id);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={faTimesCircle}\r\n                      size=\"1x\"\r\n                      color=\"#c750a3\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"Monthly__butt\">\r\n        <Link\r\n          to=\"/main\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Monthly__button\"\r\n        >\r\n          {/* <button>Let's start</button> */}\r\n          <button type=\"button\" className=\"btn btn-primary\">\r\n            Back to Main\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Monthly;\r\n",{"ruleId":"60","severity":1,"message":"61","line":13,"column":13,"nodeType":"62","messageId":"63","endLine":13,"endColumn":27},{"ruleId":"64","severity":1,"message":"65","line":31,"column":6,"nodeType":"66","endLine":31,"endColumn":8,"suggestions":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"60","severity":1,"message":"61","line":3,"column":13,"nodeType":"62","messageId":"63","endLine":3,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":56,"column":24,"nodeType":"74","messageId":"75","endLine":56,"endColumn":26},{"ruleId":"72","severity":1,"message":"73","line":65,"column":25,"nodeType":"74","messageId":"75","endLine":65,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":41,"column":24,"nodeType":"74","messageId":"75","endLine":41,"endColumn":26},{"ruleId":"72","severity":1,"message":"73","line":50,"column":25,"nodeType":"74","messageId":"75","endLine":50,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":42,"column":24,"nodeType":"74","messageId":"75","endLine":42,"endColumn":26},{"ruleId":"72","severity":1,"message":"73","line":51,"column":25,"nodeType":"74","messageId":"75","endLine":51,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":42,"column":24,"nodeType":"74","messageId":"75","endLine":42,"endColumn":26},{"ruleId":"72","severity":1,"message":"73","line":51,"column":25,"nodeType":"74","messageId":"75","endLine":51,"endColumn":27},"no-unused-vars","'ReactBootStrap' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoading'. Either include it or remove the dependency array. You can also do a functional update 'setLoading(i => ...)' if you only need 'isLoading' in the 'setLoading' call.","ArrayExpression",["76"],"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"79","fix":"80"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [isLoading]",{"range":"81","text":"82"},[1080,1082],"[isLoading]"]