[{"C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\index.js":"1","C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\App.js":"2","C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\Components\\CreateAccount\\CreateAccount.jsx":"3","C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\Components\\MainPage\\Main.jsx":"4","C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\Components\\Start\\Start.jsx":"5","C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\Components\\MainPage\\Daily\\Daily.jsx":"6","C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\Components\\MainPage\\Weekly\\Weekly.jsx":"7","C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\Components\\MainPage\\Monthly\\Monthly.jsx":"8","C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\Components\\Authorization\\Authorization.jsx":"9","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\index.js":"10","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\reportWebVitals.js":"11","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\App.js":"12","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\Components\\MainPage\\Monthly\\Monthly.jsx":"13","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\Components\\MainPage\\Daily\\Daily.jsx":"14","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\Components\\Authorization\\Authorization.jsx":"15","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\Components\\MainPage\\Main.jsx":"16","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\Components\\Start\\Start.jsx":"17","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\Components\\CreateAccount\\CreateAccount.jsx":"18","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\Components\\MainPage\\Weekly\\Weekly.jsx":"19","C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\reportWebVitals.js":"20"},{"size":549,"mtime":1610291317590,"results":"21","hashOfConfig":"22"},{"size":2087,"mtime":1610493911833,"results":"23","hashOfConfig":"22"},{"size":3618,"mtime":1610489912273,"results":"24","hashOfConfig":"22"},{"size":11988,"mtime":1610612988208,"results":"25","hashOfConfig":"22"},{"size":830,"mtime":1610444239551,"results":"26","hashOfConfig":"22"},{"size":4590,"mtime":1610488591513,"results":"27","hashOfConfig":"22"},{"size":4655,"mtime":1610488634248,"results":"28","hashOfConfig":"22"},{"size":4670,"mtime":1610488607253,"results":"29","hashOfConfig":"22"},{"size":3553,"mtime":1610563853236,"results":"30","hashOfConfig":"22"},{"size":549,"mtime":1610291317590,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":2087,"mtime":1610493911833,"results":"34","hashOfConfig":"32"},{"size":4670,"mtime":1610488607253,"results":"35","hashOfConfig":"32"},{"size":4590,"mtime":1610488591513,"results":"36","hashOfConfig":"32"},{"size":3553,"mtime":1610563853236,"results":"37","hashOfConfig":"32"},{"size":12124,"mtime":1610633109554,"results":"38","hashOfConfig":"32"},{"size":830,"mtime":1610444239551,"results":"39","hashOfConfig":"32"},{"size":3618,"mtime":1610489912273,"results":"40","hashOfConfig":"32"},{"size":4655,"mtime":1610488634248,"results":"41","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"v4vcox",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"kagzr9",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\index.js",[],["90","91"],"C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\App.js",["92"],"// import React, { Component } from \"react\";\nimport React, {useState,useEffect} from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Start from \"./Components/Start/Start\";\nimport Authorization from \"./Components/Authorization/Authorization\";\nimport Form from \"./Components/CreateAccount/CreateAccount\";\nimport Main from \"./Components/MainPage/Main\";\nimport Daily from \"./Components/MainPage/Daily/Daily\";\nimport Weekly from \"./Components/MainPage/Weekly/Weekly\";\nimport Monthly from \"./Components/MainPage/Monthly/Monthly\";\nimport \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n// import * as ReactBootStrap from \"react-bootstrap\";\n// import Weekly from './Components/MainPage/Weekly/Weekly';\n\nfunction App() {\n  const [isLoading, setLoading] = useState(true);\n\n  function fakeRequest() {\n    return new Promise((resolve) => setTimeout(() => resolve(), 3000));\n  }\n\n  useEffect(() => {\n    fakeRequest().then(() => {\n      const el = document.querySelector(\".loader-container\");\n      if (el) {\n        el.remove();\n        setLoading(!isLoading);\n      }\n    });\n  }, []);\n\n  if (isLoading) {\n    return null;\n  }\n  return (\n    <BrowserRouter>\n      <Route path=\"/start\">\n        <div className=\"App\">\n          <Start />\n        </div>\n      </Route>\n      <Route path=\"/authorization\">\n        <div className=\"App\">\n          <Authorization />\n        </div>\n      </Route>\n      <Route path=\"/form\">\n        <div className=\"App\">\n          <Form />\n        </div>\n      </Route>\n      <Route path=\"/main\">\n        <div className=\"App\">\n          <Main />\n        </div>\n      </Route>\n      <Route path=\"/daily\">\n        <div className=\"App\">\n          <Daily />\n        </div>\n      </Route>\n      <Route path=\"/weekly\">\n        <div className=\"App\">\n          <Weekly />\n        </div>\n      </Route>\n      <Route path=\"/monthly\">\n        <div className=\"App\">\n          <Monthly />\n        </div>\n      </Route>\n      {/* {<ReactBootStrap.Spinner animation=\"grow\" variant=\"secondary\" />} */}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\Components\\CreateAccount\\CreateAccount.jsx",[],"C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\Components\\MainPage\\Main.jsx",["93","94"],"C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\Components\\Start\\Start.jsx",[],"C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\Components\\MainPage\\Daily\\Daily.jsx",["95","96"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Daily.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nfunction Daily() {\r\n\r\n  const [showDaily, getDaily] = useState([]);\r\n//   const [showWeekBalance, getShowDailyBalance] = useState(\"\");\r\n  const [showSumIncome, setShowSumIncome] = useState(\"\");\r\n  const [showSumOut, setShowSumOut] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/daily\").then((response) => {\r\n      getDaily(response.data);\r\n    });\r\n  }, []);\r\n//   useEffect(() => {\r\n//     Axios.get(\"http://localhost:5000/balance/daily\").then((response) => {\r\n//       //   getBalance(response.data.reduce((a, b) => a+b));\r\n//       let res;\r\n//       let dataFrom = response.data;\r\n//       let idx = dataFrom.length - 1;\r\n//       if (idx === -1) {\r\n//         res = 0;\r\n//       } else {\r\n//         res = dataFrom[idx].balance;\r\n//       }\r\n//       getShowDailyBalance(res);\r\n//     });\r\n//   }, []);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/incomeSum/daily\").then((response) => {\r\n      let income = response.data;\r\n      income.map((val) => {\r\n        let incomeSumVal = val.trs_inc;\r\n        setShowSumIncome(incomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/outcomeSum/daily\").then((response) => {\r\n      let outcome = response.data;\r\n      outcome.map((val) => {\r\n        let outcomeSumVal = val.trs_out;\r\n        setShowSumOut(outcomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const deleteTrns = (id_trs) => {\r\n    Axios.delete(`http://localhost:5000/monthly/${id_trs}`);\r\n    console.log(id_trs);\r\n    window.location.reload(false);\r\n  };\r\n\r\n\r\n  const data = {\r\n    labels: [\"Income\", \"Outcome\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [showSumIncome, showSumOut],\r\n        backgroundColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"Daily\">\r\n      <div className=\"Daily__header\">\r\n        <Link\r\n          to=\"/weekly\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Daily__button\"\r\n        >\r\n          <FontAwesomeIcon icon={faChevronCircleLeft} size=\"2x\" color=\"#60C6D8\" />\r\n        </Link>\r\n        <h1>Daily</h1>\r\n        <Link\r\n          to=\"/monthly\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Daily__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n          icon={faChevronCircleRight}\r\n          size=\"2x\"\r\n          color=\"#60C6D8\"\r\n        />\r\n        </Link>\r\n      </div>\r\n      <Doughnut data={data} />\r\n      <div className=\"Daily__table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Income</th>\r\n              <th>Outcome</th>\r\n              <th>Date</th>\r\n              <th>D</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {showDaily.map((val) => {\r\n              return (\r\n                <tr key={val.trs_id}>\r\n                  <td>{val.name_from}</td>\r\n                  <td>{val.name_to}</td>\r\n                  <td>{val.trs_inc}</td>\r\n                  <td>{val.trs_out}</td>\r\n                  <td className=\"Monthly__table-date\">{val.trs_date}</td>\r\n                  <td\r\n                    className=\"no__border\"\r\n                    onClick={() => {\r\n                      deleteTrns(val.trs_id);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={faTimesCircle}\r\n                      size=\"1x\"\r\n                      color=\"#c750a3\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"Daily__butt\">\r\n        <Link\r\n          to=\"/main\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Daily__button\"\r\n        >\r\n          {/* <button>Let's start</button> */}\r\n          <button type=\"button\" className=\"btn btn-primary\">\r\n            Back to Main\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Daily;\r\n","C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\Components\\MainPage\\Weekly\\Weekly.jsx",["97","98"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Weekly.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Weekly(){\r\n  const [showWeekly, getWeekly] = useState([]);\r\n//   const [showWeekBalance, getShowWeekBalance] = useState(\"\");\r\n  const [showSumIncome, setShowSumIncome] = useState(\"\");\r\n  const [showSumOut, setShowSumOut] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/weekly\").then((response) => {\r\n      getWeekly(response.data);\r\n    });\r\n  }, []);\r\n\r\n//   useEffect(() => {\r\n//     Axios.get(\"http://localhost:5000/balance/weekly\").then((response) => {\r\n//       //   getBalance(response.data.reduce((a, b) => a+b));\r\n//       let res;\r\n//       let dataFrom = response.data;\r\n//       let idx = dataFrom.length - 1;\r\n//       if (idx === -1) {\r\n//         res = 0;\r\n//       } else {\r\n//         res = dataFrom[idx].balance;\r\n//       }\r\n//       getShowWeekBalance(res);\r\n//     });\r\n//   }, []);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/incomeSum/weekly\").then((response) => {\r\n      let income = response.data;\r\n      income.map((val) => {\r\n        let incomeSumVal = val.trs_inc;\r\n        setShowSumIncome(incomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/outcomeSum/weekly\").then((response) => {\r\n      let outcome = response.data;\r\n      outcome.map((val) => {\r\n        let outcomeSumVal = val.trs_out;\r\n        setShowSumOut(outcomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const deleteTrns = (id_trs) => {\r\n    Axios.delete(`http://localhost:5000/monthly/${id_trs}`);\r\n    console.log(id_trs);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const data = {\r\n    labels: [\"Income\", \"Outcome\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [showSumIncome, showSumOut],\r\n        backgroundColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"Weekly\">\r\n      <div className=\"Weekly__header\">\r\n        <Link\r\n          to=\"/monthly\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Weekly__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleLeft}\r\n            size=\"2x\"\r\n            color=\"#60C6D8\"\r\n          />\r\n        </Link>\r\n        <h1>Weekly</h1>\r\n        <Link\r\n          to=\"/daily\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Weekly__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleRight}\r\n            size=\"2x\"\r\n            color=\"#60C6D8\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <Doughnut data={data} />\r\n      <div className=\"Weekly__table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Income</th>\r\n              <th>Out</th>\r\n              <th>Date</th>\r\n              <th>D</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {showWeekly.map((val) => {\r\n              return (\r\n                <tr key={val.trs_id}>\r\n                  <td>{val.name_from}</td>\r\n                  <td>{val.name_to}</td>\r\n                  <td>{val.trs_inc}</td>\r\n                  <td>{val.trs_out}</td>\r\n                  <td className=\"Monthly__table-date\">{val.trs_date}</td>\r\n                  <td\r\n                    className=\"no__border\"\r\n                    onClick={() => {\r\n                      deleteTrns(val.trs_id);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={faTimesCircle}\r\n                      size=\"1x\"\r\n                      color=\"#c750a3\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"Weekly__butt\">\r\n        <Link\r\n          to=\"/main\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Weekly__button\"\r\n        >\r\n          {/* <button>Let's start</button> */}\r\n          <button type=\"button\" className=\"btn btn-primary\">\r\n            Back to Main\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weekly;\r\n","C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\Components\\MainPage\\Monthly\\Monthly.jsx",["99","100"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Monthly.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Monthly() {\r\n\r\n  const [showMonthly, getMonthly] = useState([]);\r\n//   const [showMontBalance, getShowMontBalance] = useState(\"\");\r\n  const [showSumIncome, setShowSumIncome] = useState(\"\");\r\n  const [showSumOut, setShowSumOut] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/monthly\").then((response) => {\r\n      getMonthly(response.data);\r\n    });\r\n  }, []);\r\n\r\n//   useEffect(() => {\r\n//     Axios.get(\"http://localhost:5000/balance/month\").then((response) => {\r\n//       //   getBalance(response.data.reduce((a, b) => a+b));\r\n//       let res;\r\n//       let dataFrom = response.data;\r\n//       let idx = dataFrom.length - 1;\r\n//       if (idx === -1) {\r\n//         res = 0;\r\n//       } else {\r\n//         res = dataFrom[idx].balance;\r\n//       }\r\n//       getShowMontBalance(res);\r\n//     });\r\n//   }, []);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/incomeSum/month\").then((response) => {\r\n      let income = response.data;\r\n      income.map((val) => {\r\n        let incomeSumVal = val.trs_inc;\r\n        setShowSumIncome(incomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/outcomeSum/month\").then((response) => {\r\n      let outcome = response.data;\r\n      outcome.map((val) => {\r\n        let outcomeSumVal = val.trs_out;\r\n        setShowSumOut(outcomeSumVal);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const deleteTrns = (id_trs) => {\r\n    Axios.delete(`http://localhost:5000/monthly/${id_trs}`);\r\n    console.log(id_trs);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const data = {\r\n    labels: [\"Income\", \"Outcome\"],\r\n    datasets: [\r\n      {\r\n        label: \"# of Votes\",\r\n        data: [showSumIncome, showSumOut],\r\n        backgroundColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderColor: [\"#60C6D8\", \"#c750a3\"],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"Monthly\">\r\n      <div className=\"Monthly__header\">\r\n        <Link\r\n          to=\"/daily\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Monthly__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleLeft}\r\n            size=\"2x\"\r\n            color=\"#60C6D8\"\r\n          />\r\n        </Link>\r\n        <h1>Monthly</h1>\r\n        <Link\r\n          to=\"/weekly\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Monthly__button\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleRight}\r\n            size=\"2x\"\r\n            color=\"#60C6D8\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <Doughnut data={data} />\r\n      <div className=\"Monthly__table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Income</th>\r\n              <th>Out</th>\r\n              <th>Date</th>\r\n              <th>D</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {showMonthly.map((val) => {\r\n              return (\r\n                <tr key={val.trs_id}>\r\n                  <td>{val.name_from}</td>\r\n                  <td>{val.name_to}</td>\r\n                  <td>{val.trs_inc}</td>\r\n                  <td>{val.trs_out}</td>\r\n                  <td className=\"Monthly__table-date\">{val.trs_date}</td>\r\n                  <td\r\n                    className=\"no__border\"\r\n                    onClick={() => {\r\n                      deleteTrns(val.trs_id);\r\n                    }}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      icon={faTimesCircle}\r\n                      size=\"1x\"\r\n                      color=\"#c750a3\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"Monthly__butt\">\r\n        <Link\r\n          to=\"/main\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Monthly__button\"\r\n        >\r\n          {/* <button>Let's start</button> */}\r\n          <button type=\"button\" className=\"btn btn-primary\">\r\n            Back to Main\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Monthly;\r\n","C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\Components\\Authorization\\Authorization.jsx",["101","102"],"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\index.js",[],["103","104"],"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\App.js",["105"],"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\Components\\MainPage\\Monthly\\Monthly.jsx",["106","107"],"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\Components\\MainPage\\Daily\\Daily.jsx",["108","109"],"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\Components\\Authorization\\Authorization.jsx",["110","111"],"import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./Login.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFrown, faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\r\n// import { Axios } from 'axios';\r\n\r\nfunction Authorization() {\r\n  const history = useHistory();\r\n  const [userMail, setUserMail] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  // const [loginStatus, setLoginStatus] = useState(\"\");\r\n  const [loginStatus, setLoginStatus] = useState(false);\r\n\r\n  // const logOnMain = ()=> {\r\n  //   props.history.push(\"/main\");\r\n  // }\r\n  const handleClick = () => {\r\n    history.push(\"/main\");\r\n  };\r\n  Axios.defaults.withCredentials = true;\r\n  const submitLogin = () => {\r\n    Axios.post(\"http://localhost:5000/login\", {\r\n      userMail: userMail,\r\n      userPassword: userPassword,\r\n    }).then((response) => {\r\n      console.log(response);\r\n      if (!response.data.auth) {\r\n        // setLoginStatus(response.data.message);\r\n        setLoginStatus(false);\r\n      } else {\r\n        // setLoginStatus(response.data.name);\r\n        setLoginStatus(true);\r\n        handleClick();\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:5000/login\").then((response) => {\r\n      if (response.data.loggedIn == true) {\r\n        setLoginStatus(response.data.user[0].name);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <h1>My Finance</h1>\r\n      <FontAwesomeIcon icon={faUserCircle} size=\"10x\" color=\"#60C6D8\" />\r\n      <div className=\"Login__inputs\">\r\n        <form>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\"></label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control testLogin\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Email\"\r\n              onChange={(e) => {\r\n                setUserMail(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label\r\n              htmlFor=\"exampleInputPassword1\"\r\n              className=\"form-label\"\r\n            ></label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control testLogin\"\r\n              id=\"exampleInputPassword1\"\r\n              placeholder=\"Password\"\r\n              onChange={(e) => {\r\n                setUserPassword(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n        </form>\r\n        {/* <Link\r\n          to=\"/main\"\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"Login__button\"\r\n        > */}\r\n        <h6>\r\n          {loginStatus && <FontAwesomeIcon icon={faFrown} size=\"1x\" color=\"#60C6D8\" />}\r\n          \r\n        </h6>\r\n        <button onClick={submitLogin}>Sign-In</button>\r\n        {/* </Link> */}\r\n      </div>\r\n      <div className=\"Login__create\">\r\n        <h6>Don't have an account ?</h6>\r\n        <h5>\r\n          <Link\r\n            to=\"/form\"\r\n            style={{ textDecoration: \"none\" }}\r\n            className=\"Login__signup\"\r\n          >\r\n            Sign-up\r\n          </Link>\r\n        </h5>\r\n      </div>\r\n      <div className=\"created__by\">\r\n        <p className=\"created__from\">Created by Voldemar</p>\r\n        <p className=\"created__from\">© all rights reserved</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Authorization;\r\n","C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\Components\\MainPage\\Main.jsx",["112","113"],"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\Components\\Start\\Start.jsx",[],"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\Components\\CreateAccount\\CreateAccount.jsx",[],"C:\\Users\\Xilas\\Desktop\\my-finance\\my-finance\\client\\src\\Components\\MainPage\\Weekly\\Weekly.jsx",["114","115"],"C:\\Users\\Xilas\\Desktop\\my-finance - test\\client\\src\\reportWebVitals.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":31,"column":6,"nodeType":"122","endLine":31,"endColumn":8,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":54,"column":24,"nodeType":"126","messageId":"127","endLine":54,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":63,"column":25,"nodeType":"126","messageId":"127","endLine":63,"endColumn":27},{"ruleId":"124","severity":1,"message":"125","line":42,"column":24,"nodeType":"126","messageId":"127","endLine":42,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":51,"column":25,"nodeType":"126","messageId":"127","endLine":51,"endColumn":27},{"ruleId":"124","severity":1,"message":"125","line":41,"column":24,"nodeType":"126","messageId":"127","endLine":41,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":50,"column":25,"nodeType":"126","messageId":"127","endLine":50,"endColumn":27},{"ruleId":"124","severity":1,"message":"125","line":42,"column":24,"nodeType":"126","messageId":"127","endLine":42,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":51,"column":25,"nodeType":"126","messageId":"127","endLine":51,"endColumn":27},{"ruleId":"128","severity":1,"message":"129","line":6,"column":28,"nodeType":"130","messageId":"131","endLine":6,"endColumn":36},{"ruleId":"132","severity":1,"message":"133","line":42,"column":34,"nodeType":"134","messageId":"135","endLine":42,"endColumn":36},{"ruleId":"116","replacedBy":"136"},{"ruleId":"118","replacedBy":"137"},{"ruleId":"120","severity":1,"message":"121","line":31,"column":6,"nodeType":"122","endLine":31,"endColumn":8,"suggestions":"138"},{"ruleId":"124","severity":1,"message":"125","line":42,"column":24,"nodeType":"126","messageId":"127","endLine":42,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":51,"column":25,"nodeType":"126","messageId":"127","endLine":51,"endColumn":27},{"ruleId":"124","severity":1,"message":"125","line":42,"column":24,"nodeType":"126","messageId":"127","endLine":42,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":51,"column":25,"nodeType":"126","messageId":"127","endLine":51,"endColumn":27},{"ruleId":"128","severity":1,"message":"129","line":6,"column":28,"nodeType":"130","messageId":"131","endLine":6,"endColumn":36},{"ruleId":"132","severity":1,"message":"133","line":42,"column":34,"nodeType":"134","messageId":"135","endLine":42,"endColumn":36},{"ruleId":"124","severity":1,"message":"125","line":54,"column":24,"nodeType":"126","messageId":"127","endLine":54,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":63,"column":25,"nodeType":"126","messageId":"127","endLine":63,"endColumn":27},{"ruleId":"124","severity":1,"message":"125","line":41,"column":24,"nodeType":"126","messageId":"127","endLine":41,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":50,"column":25,"nodeType":"126","messageId":"127","endLine":50,"endColumn":27},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoading'. Either include it or remove the dependency array. You can also do a functional update 'setLoading(i => ...)' if you only need 'isLoading' in the 'setLoading' call.","ArrayExpression",["141"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["139"],["140"],["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"143","fix":"145"},"Update the dependencies array to be: [isLoading]",{"range":"146","text":"147"},{"range":"148","text":"147"},[1107,1109],"[isLoading]",[1107,1109]]